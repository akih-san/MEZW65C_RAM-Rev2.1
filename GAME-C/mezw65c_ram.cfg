FEATURES {
    STARTADDRESS: default = $C900;
}
SYMBOLS {
    __STACKSIZE__:  type = weak, value = $0100; 
    __STACKSTART__: type = weak, value = $C8FF;
    __ZPSTART__:    type = weak, value = $0050;
    __FILETOP__: type = export, value = %S;
}
MEMORY {
    ZP:   file = "", define = yes, start = __ZPSTART__,       size = $00B0;
    STACK:file = "",               start = __STACKSTART__,    size = __STACKSIZE__;
    MAIN: file = %O,               start = %S,                size = $1E00;
    WORK: file = "",               start = $0200,             size = $C600;
}
SEGMENTS {
    ZEROPAGE: load = ZP,   type = zp;
    RODATA:   load = MAIN, type = ro;
    CODE:     load = MAIN, type = ro;
    BSS:      load = WORK, type = bss, define   = yes;
    STARTUP:  load = MAIN, type = ro,  optional = yes;
#    LOWCODE:  load = MAIN, type = ro,  optional = yes;
    ONCE:     load = MAIN, type = ro,  optional = yes;
    DATA:     load = MAIN, type = rw;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
#    CONDES: type    = interruptor,
#            label   = __INTERRUPTOR_TABLE__,
#            count   = __INTERRUPTOR_COUNT__,
#            segment = RODATA;
#            segment = RODATA,
#            import  = __CALLIRQ__;
}
